name: Build Simple Cross-Platform

on:
  push:
    tags: [ 'v*' ]  # Trigger on version tags like v0.01, v1.0.0, etc.
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Required to create releases
  actions: read    # Required to download artifacts

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install system Qt libraries (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-xinerama0-dev libxcb1 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-shape0 libxcb-randr0 libxcb-xfixes0 libxcb-sync1 libxcb-xkb1 libxkbcommon-x11-0

    - name: Ensure PyQt5 and Qt plugins are installed
      run: |
        pip install --force-reinstall --upgrade --no-cache-dir PyQt5 PyQt5-Qt5 PyQt5-sip
        python -c "import PyQt5, os; print('Qt plugins:', os.path.join(os.path.dirname(PyQt5.__file__), 'Qt', 'plugins', 'platforms')); import glob; print('Files:', glob.glob(os.path.join(os.path.dirname(PyQt5.__file__), 'Qt', 'plugins', 'platforms', '*')))"

    - name: Run tests
      run: |
        python test_cross_platform.py

    - name: Build Linux executable
      run: |
        python build_cross_platform.py --platform linux

    - name: Upload Linux build
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-linux
        path: build/dist/linux/metavinci
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Run tests
      run: |
        python test_cross_platform.py

    - name: Build Windows executable
      run: |
        python build_cross_platform.py --platform windows

    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-windows
        path: build/dist/windows/metavinci.exe
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Run tests
      run: |
        python test_cross_platform.py

    - name: Build macOS executable
      run: |
        python build_cross_platform.py --platform macos

    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-macos
        path: build/dist/mac/metavinci
        retention-days: 30

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all builds
      uses: actions/download-artifact@v4
      with:
        path: builds

    - name: Create release package
      run: |
        mkdir -p release
        cp builds/metavinci-linux/metavinci release/metavinci-linux
        cp builds/metavinci-windows/metavinci.exe release/metavinci-windows.exe
        cp builds/metavinci-macos/metavinci release/metavinci-macos
        
        # Create README for release
        cat > release/README.md << 'EOF'
        # Metavinci Cross-Platform Release
        
        This release contains executables for:
        
        - **Linux**: `metavinci-linux` - Run with `./metavinci-linux`
        - **Windows**: `metavinci-windows.exe` - Run by double-clicking or `metavinci-windows.exe`
        - **macOS**: `metavinci-macos` - Run with `./metavinci-macos`
        
        ## Installation
        
        ### Linux
        ```bash
        chmod +x metavinci-linux
        ./metavinci-linux
        ```
        
        ### Windows
        Double-click `metavinci-windows.exe` or run from command prompt.
        
        ### macOS
        ```bash
        chmod +x metavinci-macos
        ./metavinci-macos
        ```
        
        Note: macOS may require allowing the application in Security & Privacy settings.
        EOF

    - name: Upload release package
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-release
        path: release/
        retention-days: 90

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Metavinci ${{ github.ref_name }}
          
          Cross-platform release with executables for Linux, Windows, and macOS.
          
          ### Downloads
          - **Linux**: `metavinci-linux`
          - **Windows**: `metavinci-windows.exe`
          - **macOS**: `metavinci-macos`
          
          See README.md in the release for installation instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 