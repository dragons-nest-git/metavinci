name: Build Cross-Platform Installers

on:
  push:
    tags:
      - 'v0.[0-9][0-9]*'   # v0.00, v0.01, v0.02, etc.
      - '*installers*'     # Any tag containing 'installers'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-linux-installer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller Pillow icnsutil

    - name: Install system Qt libraries (Linux only)
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-xinerama0-dev libxcb1 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-shape0 libxcb-randr0 libxcb-xfixes0 libxcb-sync1 libxcb-xkb1 libxkbcommon-x11-0

    - name: Build Linux installer
      run: |
        python build_installers.py --platform linux --version ${{ github.ref_name }}

    - name: Upload Linux installer
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-linux-installer
        path: release/linux/*.deb
        retention-days: 30

  build-windows-installer:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller Pillow icnsutil

    - name: Install cx_Freeze
      run: pip install cx_Freeze

    - name: Build MSI installer
      run: python setup.py bdist_msi

    - name: Upload Windows MSI installer
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-windows-msi-installer
        path: dist/*.msi
        retention-days: 30

  build-macos-installer:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller Pillow icnsutil

    - name: Build macOS installer
      run: |
        python build_installers.py --platform macos --version ${{ github.ref_name }}

    - name: Create DMG from .app bundle
      run: |
        APP_BUNDLE=$(ls build/dist/mac/*.app | head -n 1)
        mkdir -p release/mac
        hdiutil create -volname "Metavinci" -srcfolder "$APP_BUNDLE" -ov -format UDZO "release/mac/metavinci_desktop_${{ github.ref_name }}.dmg"

    - name: Upload macOS DMG installer
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-macos-installer
        path: release/mac/*.dmg
        retention-days: 30

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux-installer, build-windows-installer, build-macos-installer]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all installers
      uses: actions/download-artifact@v4
      with:
        path: installers

    - name: Prepare release assets
      run: |
        mkdir -p release
        cp installers/metavinci-linux-installer/*.deb release/
        cp installers/metavinci-windows-msi-installer/*.msi release/
        cp installers/metavinci-macos-installer/*.zip release/

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: metavinci-installers-release
        path: release/
        retention-days: 90

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        tag_name: ${{ github.ref_name }}
        name: Installers Release ${{ github.ref_name }}
        body: |
          ## Metavinci Installers ${{ github.ref_name }}
          Cross-platform installers for Linux (.deb), Windows (.zip), and macOS (.zip).
          See included README or documentation for installation instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 